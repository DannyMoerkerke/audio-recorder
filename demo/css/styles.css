html, body {
  min-height: 100%;
  height: 100%;
  margin: 0;
  font-family: Verdana;
}

main {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}
header, footer {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 70px;
  background-color: #337ab7;
  padding: 10px;
  color: #ffffff;
}

#content {
  flex-grow: 1;
  background-color: #ffffff;
  padding: 10px;
  width: 85%;
}
.logo {
  display: flex;
  align-items: center;
  width: 95%;
  font-size: 1.7em;
}
.logo i {
  font-size: 2em;
  margin-right: 5px;
}
#github {
  display: flex;
  margin-left: auto;
}
#github img {
  max-width: 80%;
}
@media screen and (min-width: 1025px) {
  #content {
    width: 70%;
  }
  .logo {
    width: 72%;
    font-size: 3.5em;
  }
  .logo i {
    font-size: 2.5em;
    margin-right: 20px;
  }
  #github img {
    max-width: 100%;
  }
}
nav {
  display: flex;
  justify-content: space-between;
  width: 85%;
  position: relative;
}

@media screen and (min-width: 1025px) {
  nav {
    display: block;
    width: 70%;
  }
}
nav ul {
  display: none;
  list-style-type: none;
  height: 100%;
  margin: 0;
  padding: 0;
  position: absolute;
}

@media screen and (min-width: 1024px) {
  nav ul {
    display: flex;
    position: static;
    align-items: center;
    justify-content: space-between;
    text-transform: uppercase;
  }
}
nav li {
  display: block;
  padding: 5px;
  background-color: #ffffff;
}
@media screen and (min-width: 1024px) {
  nav li {
    padding: 0;
    background-color: transparent;
  }
}
nav a,
nav a:visited {
  color: #000000;
  display: inline-block;
  text-decoration: none;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: transparent;
}
@media screen and (min-width: 1024px) {
  nav a,
  nav a:visited {
    color: #ffffff;
  }
}
h1 {
  font-weight: normal;
  font-size: 3em;
}

h3 {
  font-weight: normal;
  font-size: 2em;
}
p {
  font-size: 0.9rem;
  line-height: 1.8rem;
}
pre {
  word-break: break-word;
  white-space: pre-wrap;
  overflow-wrap: break-word;
  background-color: #e5e5e5;
  display: inline-block;
  padding: 20px;
}

code {
  font-size: 1.1rem;
  word-break: break-all;
}
img {
  max-width: 100%;
  height: auto;
}
audio-recorder {
  width: 100%;
  --border: 1px solid #cccccc;
  --waveform-background-color: #cccccc;
}

@media screen and (min-width: 1024px) {
  audio-recorder {
    width: 600px;
  }
}

audio-recorder::part(slider) {
  --track-color: #000000;
  --thumb-color: #000000;
  width: 100%;
}

#record-audio {
  --font-color: #ff0000;
}

.usage {
  padding: 0;
}

.usage li {
  list-style-type: none;
  display: flex;
  align-items: center;
  padding: 5px;
}

.usage li button {
  margin-right: 10px;
  pointer-events: none;
  border: none;
  padding: 6px 8px;
}

#buttons {
  display: flex;
  flex-direction: row;
  gap: 2px;
}

button {
  border: none;
  padding: 6px 8px;
}

#stop-capture-audio,
#stop-record-audio {
  display: none;
}

#stop-record-audio {
  color: #ff0000;
}

main:has(audio-recorder[state="capturing"]) #stop-capture-audio,
main:has(audio-recorder[state="recording"]) #stop-capture-audio {
  display: block;
}
main:has(audio-recorder[state="capturing"]) #capture-audio,
main:has(audio-recorder[state="recording"]) #capture-audio {
  display: none;
}

#pause {
  display: none;
}

main:has(audio-recorder[state="playing"]) #pause {
  display: block;
}

main:has(audio-recorder[state="playing"]) #play {
  display: none;
}

main:has(audio-recorder[state="recording"]) #stop-record-audio {
  display: block;
}
main:has(audio-recorder[state="recording"]) #record-audio {
  display: none;
}
main:has(audio-recorder[state="capturing"]) #record-audio {
  opacity: 1;
  cursor: pointer;
  pointer-events: initial;
}
#stop-record-audio {
  color: #ff0000;
}

#record-audio {
  color: #ff0000;
  opacity: .5;
  cursor: not-allowed;
  pointer-events: none;
}

#play,
main:has(audio-recorder[src][state="capturing"]) #play {
  opacity: .5;
  cursor: not-allowed;
  pointer-events: none;
}

main:has(audio-recorder[src]) #play,
main:has(audio-recorder[src]) #save-audio {
  opacity: 1;
  cursor: pointer;
  pointer-events: initial;
}

main:has(audio-recorder[view="frequencies"]) #frequencies-button {
  opacity: .5;
  cursor: not-allowed;
  pointer-events: none;
}

main:has(audio-recorder[view="waveform"]) #waveform-button {
  opacity: .5;
  cursor: not-allowed;
  pointer-events: none;
}

